<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project>

<!-- =================================================================== -->
<!--                       Project definition                            -->
<!-- =================================================================== -->
<project name="sofa" default="sofa-jar" basedir="../../..">

  <!-- =================================================================== -->
  <!--                      Property Definitions                           -->
  <!-- =================================================================== -->

  <!-- =================================================================== -->
  <!--                              Imports                                -->
  <!-- =================================================================== -->

  <!-- =================================================================== -->
  <!--                          Path Definitions                           -->
  <!-- =================================================================== -->
  <path id="sofa-classpath">

    <path refid="common-classpath"/>

    <pathelement path="${query.dist.dir}/${query.jar}"/>
    <pathelement path="${driver.dist.dir}/${driver.jar}"/>
    <pathelement path="${util.dist.dir}/${util.jar}"/>
    <pathelement path="${jrdf.dist.dir}/${jrdf.base.jar}"/>
    <pathelement path="${client-jrdf.dist.dir}/${client-jrdf.jar}"/>
    <pathelement path="${server-rmi.dist.dir}/${server-rmi.jar}"/>
    <pathelement path="${resolver-spi.dist.dir}/${resolver-spi.jar}"/>
    <pathelement path="${itql.dist.dir}/${itql.jar}"/>
    <pathelement path="${lib.dir}/${jrdf.jar}"/>
    <pathelement path="${lib.dir}/${sofa.jar}"/>
    <pathelement path="${lib.dir}/${xom.jar}"/>
  </path>

  <path id="sofa-test-classpath">

    <path refid="sofa-classpath"/>

    <fileset dir="${lib.dir}" includes="**/*.jar" />
    <fileset dir="${bin.dir}" includes="**/*.jar" />
    <fileset file="${sofa.dist.dir}/${sofa.base.jar}"/>
  </path>

  <target name="sofa-clean"
          description="Removes all compile generated files for the sofa">

    <tstamp/>

    <delete dir="${sofa.obj.dir}"/>
    <delete dir="${sofa.test.dir}"/>
    <delete dir="${sofa.dist.dir}"/>
  </target>

  <target name="-sofa-prepare"
          description="Creates all directories associated with the sofa's
                       compilation"
          depends="-prepare-build">

    <mkdir dir="${sofa.obj.dir}"/>
    <mkdir dir="${sofa.test.dir}"/>
    <mkdir dir="${sofa.dist.dir}"/>
    <mkdir dir="${sofa.obj.dir}/classes"/>
  </target>

  <target name="sofa-compile"
          depends="-sofa-prepare, driver-jar, itql-jar, server-jar, jrdf-jar,
          client-jrdf-jar, resolver-spi-jar"
          description="Compiles all sofa related files included generated
                       source code">

    <javac destdir="${obj.dir}/jar/sofa/classes" debug="on"
           deprecation="on" source="1.4">
      <classpath refid="sofa-classpath"/>
      <src path="${sofa.src.dir}/java"/>
      <exclude name="org/mulgara/sofa/example/**"/>
    </javac>
  </target>

  <target name="sofa-jar"
          depends="-sofa-jar-uptodate, sofa-compile"
          unless="sofa.jar.uptodate"
          description="Creates the sofa's jar/s">

    <jar jarfile="${sofa.dist.dir}/${sofa.base.jar}">
      <fileset dir="${sofa.obj.dir}/classes"/>
      <fileset dir="${sofa.src.dir}/java" includes="**/example/*"/>
    </jar>
  </target>

  <target name="-sofa-jar-uptodate">

    <uptodate property="sofa.jar.uptodate"
              targetfile="${sofa.dist.dir}/${sofa.base.jar}">
      <srcfiles dir="${sofa.obj.dir}/classes" includes="**/*"/>
    </uptodate>
  </target>

  <target name="sofa-dist"
          depends="sofa-jar"
          unless="sofa.uptodate"
          description="Performs all tasks related to finalising this sofa
                       and readying it for distribution">

    <!-- All that's involved in the final version of the sofa library
         is the jar so we don't need to do anything because the dependencies
         take care of the work. -->
  </target>

  <target name="sofa-test"
          depends="sofa-jar, dist"
          description="Carries out unit testing for this sofa">

    <antcall target="start"/>

    <antcall target="component-test">
      <param name="classpath.id" value="sofa-test-classpath"/>
      <param name="dir" value="${sofa.src.dir}"/>
      <param name="jar" value="${sofa.base.jar}"/>
    </antcall>

    <antcall target="stop"/>
  </target>

  <target name="sofa-javadoc"
          depends="sofa-jar"
          description="Creates the javadoc for this sofa">

    <antcall target="javadoc">

      <param name="javadoc.package" value="org.mulgara.sofa.*"/>
      <param name="javadoc.classpath" value="sofa-classpath"/>
      <param name="javadoc.sourcepath" value="${sofa.src.dir}/java"/>
    </antcall>
  </target>

  <target name="sofa-help"
          description="Displays the help information for this sofa">

    <!-- This is similar to the main project's help except the information
         is specific to this sofa -->

    <echo message="Welcome to the build script for ${sofa.name}."/>
    <echo message=""/>
    <echo message="These targets can be invoked as follows:"/>
    <echo message="  ./build.sh &lt;target&gt;"/>
    <echo message=""/>

    <java fork="false" classname="org.apache.tools.ant.Main"
          newenvironment="false">

      <jvmarg value="${arch.bits}"/>

      <arg line="-buildfile ${sofa.src.dir}/build.xml -projecthelp"/>
    </java>
  </target>
</project>
