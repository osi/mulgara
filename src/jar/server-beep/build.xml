<?xml version="1.0" encoding="ISO-8859-1"?>
<!DOCTYPE project>

<!-- =================================================================== -->
<!--                       Project definition                            -->
<!-- =================================================================== -->
<project name="server-beep" default="server-beep-jar" basedir="../../..">

  <!-- =================================================================== -->
  <!--                      Property Definitions                           -->
  <!-- =================================================================== -->

  <!-- =================================================================== -->
  <!--                              Imports                                -->
  <!-- =================================================================== -->

  <!-- =================================================================== -->
  <!--                          Path Definitions                           -->
  <!-- =================================================================== -->
  <path id="server-beep-classpath">

    <path refid="common-classpath"/>

    <fileset file="${query.dist.dir}/${query.jar}"/>
    <fileset file="${server.dist.dir}/${server.jar}"/>
    <fileset file="${sparql-protocol.dist.dir}/${sparql-protocol.jar}"/>
    <fileset file="${querylang.dist.dir}/${querylang.jar}"/>
    <fileset file="${util.dist.dir}/${util.jar}"/>
    <fileset file="${rules.dist.dir}/${rules.jar}"/>

    <fileset dir="${lib.dir}" includes="beepcore-*.jar, jsr173_07_api.jar"/>
  </path>

  <path id="server-beep-test-classpath">

    <path refid="server-beep-classpath"/>

    <fileset file="${server-beep.dist.dir}/${server-beep.jar}"/>
  </path>

  <target name="server-beep-clean"
          description="Removes all compile generated files for the server-beep">

    <tstamp/>

    <delete dir="${server-beep.obj.dir}"/>
    <delete dir="${server-beep.test.dir}"/>
    <delete dir="${server-beep.dist.dir}"/>
  </target>

  <target name="-server-beep-prepare"
          description="Creates all directories associated with the server-beep's
                       compilation"
          depends="-prepare-build">

    <mkdir dir="${server-beep.obj.dir}"/>
    <mkdir dir="${server-beep.test.dir}"/>
    <mkdir dir="${server-beep.dist.dir}"/>
    <mkdir dir="${server-beep.obj.dir}/classes"/>
  </target>

  <target name="server-beep-compile"
          depends="-server-beep-prepare, querylang-jar, query-jar, server-jar, rules-jar,
                   sparql-protocol-jar"
          description="Compiles all server-beep related files included generated
                       source code">

    <javac destdir="${obj.dir}/jar/server-beep/classes" debug="on"
           deprecation="on" source="1.5">

      <classpath refid="server-beep-classpath"/>

      <src path="${server-beep.src.dir}/java"/>
    </javac>
  </target>

  <target name="server-beep-jar"
          depends="server-beep-compile, -server-beep-jar-uptodate"
          unless="server-beep.jar.uptodate"
          description="Creates the server-beep's jar/s">

    <jar jarfile="${server-beep.dist.dir}/${server-beep.jar}">
      <fileset dir="${server-beep.obj.dir}/classes"/>
    </jar>
  </target>

  <target name="-server-beep-jar-uptodate">

    <uptodate property="server-beep.jar.uptodate"
              targetfile="${server-beep.dist.dir}/${server-beep.jar}">
      <srcfiles dir="${server-beep.obj.dir}/classes" includes="**/*"/>
    </uptodate>
  </target>

  <target name="server-beep-dist"
          depends="server-beep-jar"
          unless="server-beep.uptodate"
          description="Performs all tasks related to finalising this server-beep
                       and readying it for distribution">

    <!-- All that's involved in the final version of the server-beep library
         is the jar so we don't need to do anything because the dependencies
         take care of the work. -->
  </target>

  <target name="server-beep-test"
          depends="server-beep-jar"
          description="Carries out unit testing for this server-beep">

    <antcall target="component-test">

      <param name="classpath.id" value="server-beep-test-classpath"/>
      <param name="dir" value="${server-beep.src.dir}"/>
      <param name="jar" value="${server-beep.jar}"/>
    </antcall>
  </target>

  <target name="server-beep-javadoc"
          depends="server-beep-jar"
          description="Creates the javadoc for this server-beep">

    <antcall target="javadoc">

      <param name="javadoc.package" value="org.mulgara.server.beep.*"/>
      <param name="javadoc.classpath" value="server-beep-classpath"/>
      <param name="javadoc.sourcepath" value="${server-beep.src.dir}/java"/>
    </antcall>
  </target>

  <target name="server-beep-help"
          description="Displays the help information for this server-beep">

    <!-- This is similar to the main project's help except the information
         is specific to this server-beep -->

    <echo message="Welcome to the build script for ${name}."/>
    <echo message=""/>
    <echo message="These targets can be invoked as follows:"/>
    <echo message="  ./build.sh &lt;target&gt;"/>
    <echo message=""/>

    <java fork="false" classname="org.apache.tools.ant.Main"
          newenvironment="false">

      <jvmarg value="${arch.bits}"/>

      <arg line="-buildfile ${server-beep.src.dir}/build.xml -projecthelp"/>
    </java>
  </target>
</project>
