<rule-set name="RDFS rules"
    xmlns="http://drools.org/rules"
    xmlns:java="http://drools.org/semantics/java">

  <rule name="Bootstrap">
    <parameter identifier="init">
      <java:class>org.tks.rules.Bootstrap</java:class>
    </parameter>
    <java:condition>true</java:condition>
    <java:consequence>
      <![CDATA[
        System.out.println("Initializing rules");
        drools.retractObject(init);
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "1", "select $aaa <rdf:type> <rdf:Property> from @@SOURCE@@ where $xxx $aaa $yyy;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "2", "select $xxx <rdf:type> $zzz from @@SOURCE@@ where $xxx $aaa $yyy and $aaa <rdfs:domain> $zzz;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "3", "select $uuu <rdf:type> $zzz from @@SOURCE@@ where $xxx $aaa $uuu and $aaa <rdfs:range> $zzz;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "4a", "select $xxx <rdf:type> <rdfs:Resource> from @@SOURCE@@ where $xxx $aaa $yyy;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "4b", "select $uuu <rdf:type> <rdfs:Resource> from @@SOURCE@@ where $xxx $aaa $uuu;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "5a", "select $aaa <rdfs:subPropertyOf> $ccc from @@SOURCE@@ where $aaa <rdfs:subPropertyOf> $bbb and $bbb <rdfs:subPropertyOf> $ccc;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "5b", "select $xxx <rdfs:subPropertyOf> $xxx from @@SOURCE@@ where $xxx <rdf:type> <rdf:Property>;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "6", "select $xxx $bbb $yyy from @@SOURCE@@ where $xxx $aaa $yyy and $aaa <rdfs:subPropertyOf> $bbb;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "7a", "select $xxx <rdfs:subClassOf> <rdfs:Resource> from @@SOURCE@@ where $xxx <rdf:type> <rdfs:Class>;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "7b", "select $xxx <rdfs:subClassOf> $xxx from @@SOURCE@@ where $xxx <rdf:type> <rdfs:Class>;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "8", "select $xxx <rdfs:subClassOf> $zzz from @@SOURCE@@ where $xxx <rdfs:subClassOf> $yyy and $yyy <rdfs:subClassOf> $zzz;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "9", "select $aaa <rdf:type> $yyy from @@SOURCE@@ where $aaa <rdf:type> $xxx and $xxx <rdfs:subClassOf> $yyy;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "10", "select $xxx <rdfs:subPropertyOf> <rdfs:member> from @@SOURCE@@ where $xxx <rdf:type> <rdfs:ContainerMembershipProperty>;"));
        drools.assertObject(new org.tks.rules.RDFSStdRule(init, "11", "select $xxx <rdfs:subClassOf> <rdfs:Literal> from @@SOURCE@@ where $xxx <rdf:type> <rdfs:Datatype>;"));
        drools.assertObject(new org.tks.rules.RDFSPrefixRule(init, "XI", "select $id from @@SOURCE@@ where $xxx $id $yyy;", "<rdf:type> <rdfs:ContainerMembershipProperty>"));
      ]]>
    </java:consequence>
  </rule>


  <rule name="rdfs1">
    <parameter identifier="r1"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r4a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r5b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r1.getName().equals("1")</java:condition>
    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r4a.getName().equals("4a")</java:condition>
    <java:condition>r5b.getName().equals("5b")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r1.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[1] Executing insertion");
      r1.insertData();
      System.out.println("[1] Modifying 1");
      drools.modifyObject(r1);
      System.out.println("[1] Modifying 2");
      drools.modifyObject(r2);
      System.out.println("[1] Modifying 3");
      drools.modifyObject(r3);
      System.out.println("[1] Modifying 4a");
      drools.modifyObject(r4a);
      System.out.println("[1] Modifying 5b");
      drools.modifyObject(r5b);
      System.out.println("[1] Modifying 6");
      drools.modifyObject(r6);
      System.out.println("[1] Modifying 9");
      drools.modifyObject(r9);
      System.out.println("[1] finished");
    </java:consequence>
  </rule>


  <rule name="rdfs2">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r5b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r10"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r11"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r5b.getName().equals("5b")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r7a.getName().equals("7a")</java:condition>
    <java:condition>r7b.getName().equals("7b")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r10.getName().equals("10")</java:condition>
    <java:condition>r11.getName().equals("11")</java:condition>
    <java:condition>r2.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[2] Executing insertion");
      r2.insertData();
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r5b);
      drools.modifyObject(r6);
      drools.modifyObject(r7a);
      drools.modifyObject(r7b);
      drools.modifyObject(r9);
      drools.modifyObject(r10);
      drools.modifyObject(r11);
    </java:consequence>
  </rule>


  <rule name="rdfs3">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r5b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r10"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r11"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r5b.getName().equals("5b")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r7a.getName().equals("7a")</java:condition>
    <java:condition>r7b.getName().equals("7b")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r10.getName().equals("10")</java:condition>
    <java:condition>r11.getName().equals("11")</java:condition>
    <java:condition>r3.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[3] Executing insertion");
      r3.insertData();
      drools.modifyObject(r3);
      drools.modifyObject(r2);
      drools.modifyObject(r5b);
      drools.modifyObject(r6);
      drools.modifyObject(r7a);
      drools.modifyObject(r7b);
      drools.modifyObject(r9);
      drools.modifyObject(r10);
      drools.modifyObject(r11);
    </java:consequence>
  </rule>


  <rule name="rdfs4a">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r4a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r4a.getName().equals("4a")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r4a.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[4a] Executing insertion");
      r4a.insertData();
      drools.modifyObject(r4a);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r6);
      drools.modifyObject(r9);
    </java:consequence>
  </rule>


  <rule name="rdfs4b">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r4b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r4b.getName().equals("4b")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r4b.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[4b] Executing insertion");
      r4b.insertData();
      drools.modifyObject(r4b);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r6);
      drools.modifyObject(r9);
    </java:consequence>
  </rule>


  <rule name="rdfs5a">
    <parameter identifier="r5a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r5a.getName().equals("5a")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r5a.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[5a] Executing insertion");
      r5a.insertData();
      drools.modifyObject(r5a);
      drools.modifyObject(r6);
    </java:consequence>
  </rule>


  <rule name="rdfs5b">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r5b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r5b.getName().equals("5b")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r5b.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[5b] Executing insertion");
      r5b.insertData();
      drools.modifyObject(r5b);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r6);
    </java:consequence>
  </rule>


  <rule name="rdfs6">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r5a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r5b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r8"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r10"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r11"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="rXI"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r5a.getName().equals("5a")</java:condition>
    <java:condition>r5b.getName().equals("5b")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r7a.getName().equals("7a")</java:condition>
    <java:condition>r7b.getName().equals("7b")</java:condition>
    <java:condition>r8.getName().equals("8")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r10.getName().equals("10")</java:condition>
    <java:condition>r11.getName().equals("11")</java:condition>
    <java:condition>rXI.getName().equals("XI")</java:condition>
    <java:condition>r6.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[6] Executing insertion");
      r6.insertData();
      drools.modifyObject(r6);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r5a);
      drools.modifyObject(r5b);
      drools.modifyObject(r7a);
      drools.modifyObject(r7b);
      drools.modifyObject(r8);
      drools.modifyObject(r9);
      drools.modifyObject(r10);
      drools.modifyObject(r11);
      drools.modifyObject(rXI);
    </java:consequence>
  </rule>


  <rule name="rdfs7a">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r8"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r7a.getName().equals("7a")</java:condition>
    <java:condition>r8.getName().equals("8")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r7a.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[7a] Executing insertion");
      r7a.insertData();
      drools.modifyObject(r7a);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r6);
      drools.modifyObject(r8);
      drools.modifyObject(r9);
    </java:consequence>
  </rule>


  <rule name="rdfs7b">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r7b.getName().equals("7b")</java:condition>
    <java:condition>r7b.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[7b] Executing insertion");
      r7b.insertData();
      drools.modifyObject(r7b);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r6);
    </java:consequence>
  </rule>


  <rule name="rdfs8">
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r8"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r8.getName().equals("8")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r8.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[8] Executing insertion");
      r8.insertData();
      drools.modifyObject(r8);
      drools.modifyObject(r6);
      drools.modifyObject(r9);
    </java:consequence>
  </rule>


  <rule name="rdfs9">
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r5b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r7b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r10"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r11"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r5b.getName().equals("5b")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r7a.getName().equals("7a")</java:condition>
    <java:condition>r7b.getName().equals("7b")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r10.getName().equals("10")</java:condition>
    <java:condition>r11.getName().equals("11")</java:condition>
    <java:condition>r9.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[9] Executing insertion");
      r9.insertData();
      drools.modifyObject(r9);
      drools.modifyObject(r3);
      drools.modifyObject(r5b);
      drools.modifyObject(r6);
      drools.modifyObject(r7a);
      drools.modifyObject(r7b);
      drools.modifyObject(r10);
      drools.modifyObject(r11);
    </java:consequence>
  </rule>


  <rule name="rdfs10">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r4b"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r5a"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r10"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r4b.getName().equals("4b")</java:condition>
    <java:condition>r5a.getName().equals("5a")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r10.getName().equals("10")</java:condition>
    <java:condition>r10.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[10] Executing insertion");
      r10.insertData();
      drools.modifyObject(r10);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r4b);
      drools.modifyObject(r5a);
      drools.modifyObject(r6);
    </java:consequence>
  </rule>


  <rule name="rdfs11">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r8"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r11"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r8.getName().equals("8")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r11.getName().equals("11")</java:condition>
    <java:condition>r11.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[11] Executing insertion");
      r11.insertData();
      drools.modifyObject(r11);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r6);
      drools.modifyObject(r8);
      drools.modifyObject(r9);
    </java:consequence>
  </rule>


  <rule name="rdfsXI">
    <parameter identifier="r2"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r3"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r6"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r9"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="r10"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>
    <parameter identifier="rXI"> <java:class>org.tks.rules.RDFSRule</java:class> </parameter>

    <java:condition>r2.getName().equals("2")</java:condition>
    <java:condition>r3.getName().equals("3")</java:condition>
    <java:condition>r6.getName().equals("6")</java:condition>
    <java:condition>r9.getName().equals("9")</java:condition>
    <java:condition>r10.getName().equals("10")</java:condition>
    <java:condition>rXI.getName().equals("XI")</java:condition>
    <java:condition>rXI.updateNeeded()</java:condition>

    <java:consequence>
      System.out.println("[XI] Executing insertion");
      rXI.insertData();
      drools.modifyObject(rXI);
      drools.modifyObject(r2);
      drools.modifyObject(r3);
      drools.modifyObject(r6);
      drools.modifyObject(r9);
      drools.modifyObject(r10);
    </java:consequence>
  </rule>


</rule-set>
