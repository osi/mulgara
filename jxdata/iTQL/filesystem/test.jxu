<jxu>
  <set name="debug" value="false" />

  <!-- Configure the filesystem model -->
  <set name="query" value="
    create &lt;@server@#fsmodel&gt; &lt;http://tucana.org/tucana#FileSystemModel&gt; ;
    drop &lt;@server@#fsmodel&gt; ;
    create &lt;@server@#fsmodel&gt; &lt;http://tucana.org/tucana#FileSystemModel&gt; ;
    alias &lt;http://tucana.org/tucana#&gt; as exp ;
    insert $x &lt;http://tucana.org/tucana/filesystem#Include&gt; &lt;@baseuri@/tmp/filesystem&gt;
           $x &lt;http://tucana.org/tucana/filesystem#Exclude&gt; &lt;@baseuri@/tmp/filesystem/mp3&gt;
    into &lt;@server@?def#fsmodel&gt; ;
    create &lt;@server@#xsdmodel&gt; &lt;http://tucana.org/tucana#XMLSchemaModel&gt; ;
    drop &lt;@server@#xsdmodel&gt; ;
    create &lt;@server@#xsdmodel&gt; &lt;http://tucana.org/tucana#XMLSchemaModel&gt; ;
  "/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="result1.txt" name="queryResult">
    <save name="queryResult" file="badCreateResult1.xml"/>
    <fail>Output failed.  Check badCreateResult1.xml for output.</fail>
  </ifEqual>

  <!-- Test 1: Test that a general query obtains the entire directory (except for exclusions) -->
  <set name="query"
  value="select $object
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#filename&gt; $object
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult1.txt" name="queryResult">
    <save name="queryResult" file="badQuery1Result.xml"/>
    <fail>Output failed.  Check badQuery1Result.xml for output.</fail>
  </ifEqual>

  <!-- Test 2: Test that a general query excludes the correct directory -->
  <set name="query"
  value="select $object
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#extension&gt; 'mp3' and
               $subject $predicate $object
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult2.txt" name="queryResult">
    <save name="queryResult" file="badQuery2Result.xml"/>
    <fail>Output failed.  Check badQuery2Result.xml for output.</fail>
  </ifEqual>

  <!-- Test 3: Test that you are able to find all files of a certain extension -->
  <set name="query"
  value="select $name
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#extension&gt; 'txt' and
               $subject &lt;http://tucana.org/tucana#filename&gt; $name
         order by $name desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult3.txt" name="queryResult">
    <save name="queryResult" file="badQuery3Result.xml"/>
    <fail>Output failed.  Check badQuery3Result.xml for output.</fail>
  </ifEqual>

  <!-- Test 4: Test the ability to find files of a specific modified range
       (Removed until XSDResolver/External resolver interoperability issues
       resolved as the modified dates are not constant due to checkouts etc. -->
  <!--set name="query"
  value="select $name
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#modified&gt; $object and
               $object &lt;http://tucana.org/tucana#after&gt; '2004-01-01T00:00:00'^^&lt;http://www.w3.org/2001/XMLSchema#dateTime&gt; in &lt;@server@#xsdmodel&gt; and
               $subject &lt;http://tucana.org/tucana#filename&gt; $name
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult4.txt" name="queryResult">
    <save name="queryResult" file="badQuery4Result.xml"/>
    <fail>Output failed.  Check badQuery4Result.xml for output.</fail>
  </ifEqual-->

  <!-- Test 5: Test the ability to find a file of a specific size -->
  <set name="query"
   value="select $name
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#size&gt; '71247' and
               $subject &lt;http://tucana.org/tucana#filename&gt; $name
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult5.txt" name="queryResult">
    <save name="queryResult" file="badQuery5Result.xml"/>
    <fail>Output failed.  Check badQuery5Result.xml for output.</fail>
  </ifEqual>

  <!-- Test 6: Test the ability to find a file by name -->
  <set name="query"
  value="select $name
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#filename&gt; 'ical.rdf' and
               $subject &lt;http://tucana.org/tucana#filename&gt; $name
         order by $name desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult6.txt" name="queryResult">
    <save name="queryResult" file="badQuery6Result.xml"/>
    <fail>Output failed.  Check badQuery6Result.xml for output.</fail>
  </ifEqual>

  <!-- Test 7: Test that the resolver can handle a large filesystem.  This does
       not compare against any expected output because the filesystem is dynamic
       and would require constant updating of the expected results.  The purpose
       is to ensure that no out of memory exceptions occur which will cause an
       error. -->
  <set name="query"
  value="
    drop &lt;@server@#fsmodel&gt; ;
    create &lt;@server@#fsmodel&gt; &lt;http://tucana.org/tucana#FileSystemModel&gt; ;
    insert $x &lt;http://tucana.org/tucana/filesystem#Include&gt; &lt;@baseuri@/&gt;
    into &lt;@server@?def#fsmodel&gt; ;
    select $subject $predicate $object
         from &lt;@server@#fsmodel&gt;
         where $subject $predicate $object
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />

  <!-- Test 8: Test that we can include a file -->
  <set name="query"
  value="
    drop &lt;@server@#fsmodel&gt; ;
    create &lt;@server@#fsmodel&gt; &lt;http://tucana.org/tucana#FileSystemModel&gt; ;
    insert $x &lt;http://tucana.org/tucana/filesystem#Include&gt; &lt;@baseuri@/tmp/filesystem/ical.rdf&gt;
    into &lt;@server@?def#fsmodel&gt; ;
    select $object
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#filename&gt; $object
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult8.txt" name="queryResult">
    <save name="queryResult" file="badQuery8Result.xml"/>
    <fail>Output failed.  Check badQuery8Result.xml for output.</fail>
  </ifEqual>

  <!-- Test 9: Test that we can exclude a file -->
  <set name="query"
  value="
    drop &lt;@server@#fsmodel&gt; ;
    create &lt;@server@#fsmodel&gt; &lt;http://tucana.org/tucana#FileSystemModel&gt; ;
    insert $x &lt;http://tucana.org/tucana/filesystem#Include&gt; &lt;@baseuri@/tmp/filesystem/ical.rdf&gt;
           $x &lt;http://tucana.org/tucana/filesystem#Exclude&gt; &lt;@baseuri@/tmp/filesystem/ical.rdf&gt;
    into &lt;@server@?def#fsmodel&gt; ;
    select $object
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#filename&gt; $object
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult9.txt" name="queryResult">
    <save name="queryResult" file="badQuery9Result.xml"/>
    <fail>Output failed.  Check badQuery9Result.xml for output.</fail>
  </ifEqual>

  <!-- Test 10: Test that an empty inclusion passes -->
  <set name="query"
  value="
    drop &lt;@server@#fsmodel&gt; ;
    create &lt;@server@#fsmodel&gt; &lt;http://tucana.org/tucana#FileSystemModel&gt; ;
    select $object
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#filename&gt; $object
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult10.txt" name="queryResult">
    <save name="queryResult" file="badQuery10Result.xml"/>
    <fail>Output failed.  Check badQuery10Result.xml for output.</fail>
  </ifEqual>

    <!-- Test 11: Test that we can exclude a file -->
  <set name="query"
  value="
    drop &lt;@server@#fsmodel&gt; ;
    create &lt;@server@#fsmodel&gt; &lt;http://tucana.org/tucana#FileSystemModel&gt; ;
    insert $x &lt;http://tucana.org/tucana/filesystem#Include&gt; &lt;@baseuri@/tmp/filesystem/mp3&gt;
           $x &lt;http://tucana.org/tucana/filesystem#Include&gt; &lt;@baseuri@/tmp/filesystem/mbox&gt;
    into &lt;@server@?def#fsmodel&gt; ;
    select $object
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#filename&gt; $object
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult11.txt" name="queryResult">
    <save name="queryResult" file="badQuery11Result.xml"/>
    <fail>Output failed.  Check badQuery11Result.xml for output.</fail>
  </ifEqual>

    <!-- Test 12: Test that we can exclude more than one file -->
  <set name="query"
  value="
    drop &lt;@server@#fsmodel&gt; ;
    create &lt;@server@#fsmodel&gt; &lt;http://tucana.org/tucana#FileSystemModel&gt; ;
    insert $x &lt;http://tucana.org/tucana/filesystem#Include&gt; &lt;@baseuri@/tmp/filesystem/mbox&gt;
           $x &lt;http://tucana.org/tucana/filesystem#Exclude&gt; &lt;@baseuri@/tmp/filesystem/mbox/Invalid&gt;
           $x &lt;http://tucana.org/tucana/filesystem#Exclude&gt; &lt;@baseuri@/tmp/filesystem/mbox/Empty&gt;
    into &lt;@server@?def#fsmodel&gt; ;
    select $object
         from &lt;@server@#fsmodel&gt;
         where $subject &lt;http://tucana.org/tucana#filename&gt; $object
         order by $object desc;"/>

  <eval stepClass="org.kowari.store.jxunit.QueryJX" />
  <ifEqual converse="true" file="queryResult12.txt" name="queryResult">
    <save name="queryResult" file="badQuery12Result.xml"/>
    <fail>Output failed.  Check badQuery12Result.xml for output.</fail>
  </ifEqual>

</jxu>

